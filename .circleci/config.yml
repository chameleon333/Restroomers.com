# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  rubocop:
    docker:
      - image: circleci/ruby:2.5.5-stretch-node-browsers-legacy
        environment:
          RAILS_ENV: test
          MYSQL_HOST: 127.0.0.1
          BUNDLER_VERSION: 2.0.2        
      - image: circleci/mysql:8.0.16-ram
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USERNAME: root
          MYSQL_ROOT_PASSWORD: root
          # MYSQL_PASSWORD: root        
          MYSQL_DATABASE: myapp_test

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            # sudo rm /usr/local/bin/bundler
            sudo gem install bundler      
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundler
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundler
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop

  rspec:
    docker:
      - image: circleci/ruby:2.5.5-stretch-node-browsers-legacy
        environment:
          RAILS_ENV: test
          MYSQL_HOST: 127.0.0.1
          BUNDLER_VERSION: 2.0.2
      - image: circleci/mysql:8.0.16-ram
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USERNAME: root
          MYSQL_ROOT_PASSWORD: root
          # MYSQL_PASSWORD: root        
          MYSQL_DATABASE: myapp_test

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            # sudo rm /usr/local/bin/bundler
            sudo gem install bundler
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundler
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundler
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: bundle exec rails db:create         
      # - run: bundle exec rails db:schema:load 
      #上は実際にマイグレーションファイルを実行してスキーマフィルが生成されたら解放する,
      #以下それまでのエラー文
      #(/home/circleci/repo/db/schema.rb doesn't exist yet. Run `rails db:migrate` to create it, then try again. )


      # Rspec
      - run:
          name: Rspec
          command: bundle exec rspec

  deploy:
    docker:
      - image: 3.7.4-stretch-node-browsers-legacy 
    steps:
      - checkout
      - set_docker
      - run:
          name: install aws
          command: |
            sudo pip install awscli
            aws --version
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee -a /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Install jq
          command: sudo apt-get install -y jq
      - run:
          name: Log in AWS ECR
          command: eval $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: Build & Push Docker Image
          command: |
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/myapp:latest -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/myapp:$CIRCLE_SHA1 -f Dockerfile_pro --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY .
            docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/myapp:$CIRCLE_SHA1
      - run:
          name: "DB Migrate"
          command: |
            aws ecs run-task \
              --region ap-northeast-1 \
              --cluster myapp \
              --task-definition myapp \
              --overrides file://ecs/run_task_db_migrate.json
      - run:
          name: "Sevice deploy"
          #environment:
          command: |
            ecs-deploy -c eStreak-cluster -n eStreak_app_service \
              -r ap-northeast-1 -t 240 \
              -i $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/estreak_app_repo:$CIRCLE_SHA1
workflows:
  version: 2
  test_deploy:
    jobs:
      - rubocop
      - rspec:
          requires:
            - rubocop
      - deploy:
          requires:
            - rspec
          filters:
            branches:
              only: master            